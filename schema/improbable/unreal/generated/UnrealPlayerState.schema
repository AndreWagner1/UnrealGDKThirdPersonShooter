// Copyright (c) Improbable Worlds Ltd, All Rights Reserved
// Note that this file has been generated automatically
package improbable.unreal;

import "improbable/vector3.schema";
import "improbable/unreal/core_types.schema";

component UnrealPlayerStateSingleClientRepData {
	id = 100015;
}
component UnrealPlayerStateMultiClientRepData {
	id = 100016;
<<<<<<< HEAD
	bool field_bhidden = 1; // COND_None
	bool field_breplicatemovement = 2; // COND_None
	bool field_btearoff = 3; // COND_None
	bool field_bcanbedamaged = 4; // COND_None
	uint32 field_remoterole = 5; // COND_None
	bytes field_replicatedmovement = 6; // COND_SimulatedOrPhysics
	UnrealObjectRef field_attachmentreplication_attachparent = 7; // COND_Custom
	improbable.Vector3f field_attachmentreplication_locationoffset = 8; // COND_Custom
	improbable.Vector3f field_attachmentreplication_relativescale3d = 9; // COND_Custom
	UnrealFRotator field_attachmentreplication_rotationoffset = 10; // COND_Custom
	string field_attachmentreplication_attachsocket = 11; // COND_Custom
	UnrealObjectRef field_attachmentreplication_attachcomponent = 12; // COND_Custom
	UnrealObjectRef field_owner = 13; // COND_None
	uint32 field_role = 14; // COND_None
	UnrealObjectRef field_instigator = 15; // COND_None
	float field_score = 16; // COND_None
	uint32 field_ping = 17; // COND_SkipOwner
	int32 field_playerid = 18; // COND_InitialOnly
	bool field_bfrompreviouslevel = 19; // COND_None
	bool field_bisabot = 20; // COND_InitialOnly
	bool field_bisinactive = 21; // COND_InitialOnly
	bool field_bisspectator = 22; // COND_None
	bool field_bonlyspectator = 23; // COND_None
	int32 field_starttime = 24; // COND_None
	bytes field_uniqueid = 25; // COND_InitialOnly
	string field_playernameprivate = 26; // COND_None
=======
	bool field_bhidden = 1; // COND_None //  Actor
	bool field_breplicatemovement = 2; // COND_None //  Actor
	bool field_btearoff = 3; // COND_None //  Actor
	uint32 field_remoterole = 4; // COND_None //  Actor
	UnrealObjectRef field_owner = 5; // COND_None //  Actor
	bytes field_replicatedmovement = 6; // COND_SimulatedOrPhysics //  RepMovement :: Actor
	UnrealObjectRef field_attachmentreplication_attachparent = 7; // COND_Custom //  RepAttachment :: RepAttachment :: Actor
	improbable.Vector3f field_attachmentreplication_locationoffset = 8; // COND_Custom //  Vector_NetQuantize100 :: RepAttachment :: Actor
	improbable.Vector3f field_attachmentreplication_relativescale3d = 9; // COND_Custom //  Vector_NetQuantize100 :: RepAttachment :: Actor
	UnrealFRotator field_attachmentreplication_rotationoffset = 10; // COND_Custom //  Rotator :: RepAttachment :: Actor
	string field_attachmentreplication_attachsocket = 11; // COND_Custom //  RepAttachment :: RepAttachment :: Actor
	UnrealObjectRef field_attachmentreplication_attachcomponent = 12; // COND_Custom //  RepAttachment :: RepAttachment :: Actor
	uint32 field_role = 13; // COND_None //  Actor
	bool field_bcanbedamaged = 14; // COND_None //  Actor
	UnrealObjectRef field_instigator = 15; // COND_None //  Actor
	float field_score = 16; // COND_None //  PlayerState
	uint32 field_ping = 17; // COND_SkipOwner //  PlayerState
	string field_playername = 18; // COND_None //  PlayerState
	int32 field_playerid = 19; // COND_InitialOnly //  PlayerState
	bool field_bfrompreviouslevel = 20; // COND_None //  PlayerState
	bool field_bisabot = 21; // COND_InitialOnly //  PlayerState
	bool field_bisinactive = 22; // COND_InitialOnly //  PlayerState
	bool field_bisspectator = 23; // COND_None //  PlayerState
	bool field_bonlyspectator = 24; // COND_None //  PlayerState
	int32 field_starttime = 25; // COND_None //  PlayerState
	bytes field_uniqueid = 26; // COND_InitialOnly //  UniqueNetIdRepl :: PlayerState
>>>>>>> All steps working!
}
component UnrealPlayerStateMigratableData {
	id = 100017;
}

component UnrealPlayerStateClientRPCs {
	id = 100018;
}
component UnrealPlayerStateServerRPCs {
	id = 100019;
}
